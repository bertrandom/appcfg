name: build

on: [push, pull_request]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: pip install "poetry<=1.3.2" # Install the latest available version of Poetry for the respective Python version
      - name: Install dependencies using Poetry
        run: poetry install
      - name: Run Tox
        run: poetry run tox -e py -e flake8
      - name: Prepare coverage data
        run: poetry run coverage xml
      - uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: test
    if: github.repository_owner == 'bjoluc' && github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.10
      - name: Install poetry
        run: pip install poetry==1.3.2
      - uses: bjoluc/semantic-release-config-poetry@v2
        with:
          pypi_token: ${{ secrets.PYPI_TOKEN }}
